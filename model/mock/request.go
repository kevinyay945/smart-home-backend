// Code generated by MockGen. DO NOT EDIT.
// Source: smart-home-backend/model (interfaces: IRequest)

// Package modelMock is a generated GoMock package.
package modelMock

import (
	reflect "reflect"
	schema "smart-home-backend/lib/pg/schema"

	gomock "github.com/golang/mock/gomock"
)

// MockIRequest is a mock of IRequest interface.
type MockIRequest struct {
	ctrl     *gomock.Controller
	recorder *MockIRequestMockRecorder
}

// MockIRequestMockRecorder is the mock recorder for MockIRequest.
type MockIRequestMockRecorder struct {
	mock *MockIRequest
}

// NewMockIRequest creates a new mock instance.
func NewMockIRequest(ctrl *gomock.Controller) *MockIRequest {
	mock := &MockIRequest{ctrl: ctrl}
	mock.recorder = &MockIRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRequest) EXPECT() *MockIRequestMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockIRequest) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIRequestMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIRequest)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockIRequest) Get() ([]schema.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]schema.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIRequestMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIRequest)(nil).Get))
}

// Save mocks base method.
func (m *MockIRequest) Save(arg0 *schema.Request) (schema.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(schema.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockIRequestMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockIRequest)(nil).Save), arg0)
}

// Update mocks base method.
func (m *MockIRequest) Update(arg0 string, arg1 *schema.Request) (schema.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(schema.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockIRequestMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIRequest)(nil).Update), arg0, arg1)
}
